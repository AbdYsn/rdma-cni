language: go
sudo: required

go:
  - "1.13"

env:
  global:
    - PATH=$GOROOT/bin:$GOPATH/bin:$PATH
    - IMAGE_NAME=mellanox/rdma-cni

before_script:
  - go get -u github.com/mattn/goveralls

script:
  - make lint
  - make test-coverage
  - goveralls -coverprofile=rdma-cni.cover -service=travis-ci
  - make image

before_deploy:
  - docker login -u "$REGISTRY_USER" -p "$REGISTRY_PASS"

deploy:
  # Push image to Dockerhub on merge to master
  - provider: script
    skip_cleanup: true
    script: >
      bash -cx '
      docker tag $(IMAGE_NAME) $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):latest;
      docker push $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):latest;
      export DOCKER_CLI_EXPERIMENTAL="enabled";
      docker manifest create $(IMAGE_NAME):latest $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):latest;
      docker manifest annotate $(IMAGE_NAME):latest $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):latest --arch $(TRAVIS_CPU_ARCH);
      docker manifest push $(IMAGE_NAME):latest
      echo Done'
    on:
      branch: master
  # Push image to Dockerhub on tag
  - provider: script
    skip_cleanup: true
    script: >
      bash -cx '
      docker tag $(IMAGE_NAME) $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):$(TRAVIS_TAG);
      docker push $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):$(TRAVIS_TAG);
      export DOCKER_CLI_EXPERIMENTAL="enabled";
      docker manifest create $(IMAGE_NAME):$(TRAVIS_TAG) $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):$(TRAVIS_TAG);
      docker manifest annotate $(IMAGE_NAME):$(TRAVIS_TAG) $(IMAGE_NAME)-$(TRAVIS_CPU_ARCH):$(TRAVIS_TAG) --arch $(TRAVIS_CPU_ARCH);
      docker manifest push $(IMAGE_NAME):$(TRAVIS_TAG)
      echo Done'
    on:
      tags: true
      all_branches: true
      condition: "$TRAVIS_TAG =~ ^v[0-9].*$"
